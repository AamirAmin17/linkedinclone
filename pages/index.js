import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";

import Header from "../components/Header";
import Main from "../components/Main";
import { connectToDatabase } from "../utill/mongodb";
import { getPostServerSide } from "../atoms/getPostAtom";
import { useRecoilState } from "recoil";

export default function Home({ posts }) {
  const [getRecoilPosts, setGetRecoilPosts] = useRecoilState(getPostServerSide);

  setGetRecoilPosts(posts);
  const router = useRouter();
  // const { status } = useSession({
  //   required: true,
  //   onUnauthenticated() {
  //     //The user is not authenticated, handle it here.
  //     router.push("/home");S
  //   },
  // });
  //
  return (
    <div className='bg-[#F3F2EF] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6'>
      <Head>
        <title>Feed | LinkedIn</title>
        <meta name='LinkedIn Clone' content='Generated by next app' />
      </Head>
      {/**Header */}
      <Header />
      {/**Main Content */}
      <Main />
    </div>
  );
}
export async function getServerSideProps(context) {
  //check if the user is authenticated on the server..
  const session = await getSession(context);
  if (!session) {
    return {
      redirect: {
        permanent: false,
        destination: "/home",
      },
    };
  }

  //Get post on SSR
  const { db } = await connectToDatabase();
  const posts = await db
    .collection("posts")
    .find()
    .sort({ timestamp: -1 })
    .toArray();

  // Get Google News API

  return {
    props: {
      session,
      posts: JSON.parse(
        JSON.stringify(
          posts.map((post) => ({
            _id: post._id.toString(),
            input: post.input,
            photoUrl: post.photoUrl,
            username: post.username,
            email: post.email,
            userImg: post.userImg,
            createdAt: post.createdAt,
          }))
        )
      ),
    },
  };
}
